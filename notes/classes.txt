Class Position

# Position has knowledge of pieces
# Portfolio does not
# Portoflio only deals with Positions:
  creates new when dictated by Target
  adds to it
  sells from it


# USE CASES

# portfolio.as_of('2013-12-31') => ... :positions => 
#   {
#     :aapl => object,
#     :mhr => objct,
#     ...
#   }


# apple_position = portfolio.position(:aapl)

# apple_position = portfolio.as_of('2013-12-31')[:positions][:aapl]


# apple_
# apple_position.market_value => 14000
# apple_position.share_count => 800
# apple_position.profit(from: '2007-12-31') => 1000
# apple_position.average_entry_price => 13.50
# apple_position.delisted? => true
# apple_position.delisting_info => { date: '2013-17-15', last_price: 100 }

# apple_position.pieces => {
#   '2011-12-31' => { share_count: 300, entry_price: 15.05 },
#   '2010-12-31' => { share_count: 500, entry_price: 12.54 }
# }


# portfolio.buy(position: apple, date: '2012-12-31', amount: 500)
# portfolio.sell(position: apple, date: '2012-12-31', amount: 300, method: :lifo)


# add_target_positions_not_already held - will create new positions and name them
# buy will create a new piece to an exisiting position
# sell - will sell out according to parameter